import streamlit as st
import pandas as pd
import os

#  –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤, –µ—Å–ª–∏ —Ç–∞–∫–∏–µ –µ—Å—Ç—å 
if os.path.exists("books.csv"):
    try:
        temp_df = pd.read_csv("books.csv", encoding="utf-8")
        temp_df.rename(columns={
            "–ù–∞–∑–≤–∞–Ω–∏–µ": "title",
            "–ê–≤—Ç–æ—Ä": "author",
            "–ñ–∞–Ω—Ä": "genre",
            "–û–ø–∏—Å–∞–Ω–∏–µ": "description"
        }, inplace=True)
        temp_df.to_csv("books.csv", index=False, encoding="utf-8")
    except Exception as e:
        st.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏: {e}")

#  –ó–∞–≥—Ä—É–∑–∫–∞ –∫–Ω–∏–≥ 
@st.cache_data
def load_books():
    try:
        df = pd.read_csv("books.csv", encoding="utf-8")
        if df.empty:
            st.error("–§–∞–π–ª 'books.csv' –ø—É—Å—Ç.")
        return df
    except pd.errors.EmptyDataError:
        st.error("–§–∞–π–ª 'books.csv' –ø—É—Å—Ç –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω.")
        return pd.DataFrame()
    except FileNotFoundError:
        st.error("–§–∞–π–ª 'books.csv' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return pd.DataFrame()

books_df = load_books()

#  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ 
if "likes" not in st.session_state:
    st.session_state.likes = {}  
if "read_later" not in st.session_state:
    st.session_state.read_later = set()

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è 
st.sidebar.title("üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è")
view_option = st.sidebar.radio(
    "–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
    ("–í—Å–µ –∫–Ω–∏–≥–∏", "üëç –ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è", "üëé –ù–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è",  "üìú –ß–∏—Ç–∞—Ç—å –ø–æ–∑–∂–µ")
)

display_df = pd.DataFrame()

if view_option == "–í—Å–µ –∫–Ω–∏–≥–∏":
    display_df = books_df.copy()
elif view_option == "üëç –ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è":
    liked_ids = [i for i, v in st.session_state.likes.items() if v == "like"]
    display_df = books_df.loc[books_df.index.isin(liked_ids)]
elif view_option == "üëé –ù–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è":
    disliked_ids = [i for i, v in st.session_state.likes.items() if v == "dislike"]
    display_df = books_df.loc[books_df.index.isin(disliked_ids)]
elif view_option == "üìú –ß–∏—Ç–∞—Ç—å –ø–æ–∑–∂–µ":
    display_df = books_df.loc[books_df.index.isin(st.session_state.read_later)]

#  –ó–∞–≥–æ–ª–æ–≤–æ–∫ 
st.title(" –ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–Ω–∏–≥
if display_df.empty:
    st.info("–ù–µ—Ç –∫–Ω–∏–≥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.")
else:
    for idx, row in display_df.iterrows():
        st.subheader(row.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"))
        st.text(f"–ê–≤—Ç–æ—Ä: {row.get('author', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        st.text(f"–ñ–∞–Ω—Ä: {row.get('genre', '–ù–µ —É–∫–∞–∑–∞–Ω')}")

        col1, col2, col3 = st.columns(3)
        with col1:
            if st.button("üëç –ù—Ä–∞–≤–∏—Ç—Å—è", key=f"like_{idx}"):
                st.session_state.likes[idx] = "like"
        with col2:
            if st.button("üëé –ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è", key=f"dislike_{idx}"):
                st.session_state.likes[idx] = "dislike"
        with col3:
            if idx in st.session_state.read_later:
                if st.button("‚ùå –£–±—Ä–∞—Ç—å", key=f"remove_later_{idx}"):
                    st.session_state.read_later.remove(idx)
            else:
                if st.button("üìú –ß–∏—Ç–∞—Ç—å –ø–æ–∑–∂–µ", key=f"read_later_{idx}"):
                    st.session_state.read_later.add(idx)

st.divider()

#  –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ 
liked_books = [row for i, row in books_df.iterrows() if st.session_state.likes.get(i) == "like"]
if liked_books:
    st.header("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–≤–æ–∏–º –≤–∫—É—Å–∞–º")
    liked_df = pd.DataFrame(liked_books)
    genres = liked_df["genre"].dropna().unique()

    rec_df = books_df[books_df["genre"].isin(genres)]
    rec_df = rec_df[~rec_df.index.isin(st.session_state.likes.keys())]

    for idx, row in rec_df.head(10).iterrows():
        st.subheader(row.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"))
        st.text(f"–ê–≤—Ç–æ—Ä: {row.get('author', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
        st.text(f"–ñ–∞–Ω—Ä: {row.get('genre', '–ù–µ —É–∫–∞–∑–∞–Ω')}")

